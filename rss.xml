<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>yanglukuan</title>
    <link>http://yoursite.com/</link>
    <atom:link href="/rss.xml" rel="self" type="application/rss+xml"/>
    
    <description>博闻强记</description>
    <pubDate>Mon, 21 Aug 2017 09:39:55 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>git多账号配置（Windows平台）</title>
      <link>http://yoursite.com/2017/08/21/git%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AE/</link>
      <guid>http://yoursite.com/2017/08/21/git%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AE/</guid>
      <pubDate>Mon, 21 Aug 2017 06:10:22 GMT</pubDate>
      <description>
      
        &lt;p&gt;Git的配置相信大家都不陌生了，如果还不熟悉，不要着急，继续往下看就好了。今天主要看一下多账户的场景，顺便也复习一下Git的配置流程。  &lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;什么情况下需要多账户的配置呢？&quot;&gt;&lt;a href=&quot;#什么情况下需要多账户的配置呢？&quot; class=
      
      </description>
      
      <content:encoded><![CDATA[<p>Git的配置相信大家都不陌生了，如果还不熟悉，不要着急，继续往下看就好了。今天主要看一下多账户的场景，顺便也复习一下Git的配置流程。  </p>
<hr>
<h2 id="什么情况下需要多账户的配置呢？"><a href="#什么情况下需要多账户的配置呢？" class="headerlink" title="什么情况下需要多账户的配置呢？"></a>什么情况下需要多账户的配置呢？</h2><p>1.在公司一般大家都会配置公司的代码仓库的账户，用的账号一般是公司企业邮箱账号,比如<code>zhangsan@XXX.com</code>,一般的配置流程都是企业入职的时候给一个配置清单或者新手指导，员工自己按照指导去配置，无非也就是用git的SSH 命令生成密钥对，然后将公钥上传至管理平台，就可以很开心的写Bug了，哦 不对，写码。<br>但是某一天有这样一个场景，有时候自己也会写点代码，这些代码一般我们托管在GitHub等平台上，这个时候就无法使用公司的账号了，需要再配置一个GitHub的账号，比如<code>zhangsan@Gmail.com</code>这样的账户名字。<br>2.由于天朝独特的网络环境,你们懂得，有时候GitHub无法连接或者不稳定，这个时候需要有一个国内的代码托管平台，国内比如码云这样的平台也可以托管代码，速度比较稳定。这个时候就需要同时配置GitHub和码云两个账户。</p>
<h2 id="具体配置"><a href="#具体配置" class="headerlink" title="具体配置"></a>具体配置</h2><h3 id="第一种情况"><a href="#第一种情况" class="headerlink" title="第一种情况"></a>第一种情况</h3><blockquote>
<p>公司账户和GitHub账户（不同邮箱）</p>
</blockquote>
<p>1.如果原来配置过一次，在用户目录下会有一个.ssh目录，里面存放着你默认第一次生成的秘钥对，<code>id_rsa</code>和<code>id_rsa.pub</code>,在此目录打开<code>Git bash</code> 输入命令 <code>ssh-keygen -C &quot;zhangsan@Gmail.com&quot; -t rsa</code> 然后回车 这个时候需要注意，需要给生成的秘钥对命名，比如<code>id_rsa_github</code>，不然会以默认的名字<code>id_rsa</code>生成，从而覆盖掉原来生成的。然后回车两次，就可以成功生成秘钥。<br>2.生成秘钥成功后，把生成公钥上传到GitHub的秘钥管理平台上，然后最重要的步骤来了。<br>回到用户目录的.ssh目录，创建一个config文本文件，注意这个文件名字为config，没有后缀名，尝试过加上.config后缀，貌似不会被识别。这个配置文件就是告诉ssh多个账户下，每个账户对应的秘钥位置和Host位置。<br>config配置文件<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"># github </div><div class="line">Host github.com</div><div class="line">HostName github.com</div><div class="line">User zhangsan</div><div class="line">IdentityFile ~/.ssh/id_rsa_github</div><div class="line"></div><div class="line"># company</div><div class="line">Host code.company.com</div><div class="line">HostName code.company.com</div><div class="line">User zhangsan</div><div class="line">IdentityFile ~/.ssh/id_rsa</div></pre></td></tr></table></figure></p>
<p>这样配置就结束了，打开<code>git bash</code> 输入命令测试一下<br><code>ssh -T git@github.com</code><br>成功的话会收到这样一段回复<br><code>Hi zhangsan! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</code><br>不成功的话，检查下上面的配置，或者使用<code>ssh -vT git@github.com</code>  查看下详细的错误信息。<br>3.有些网友的帖子会说如果配置了全局的Git用户名和邮箱，需要去掉，其实不去掉也是可以的。如果你先设置了公司的账户为全局配置，那么你克隆GitHub上的代码到本地后，只要在那个目录设置本地的用户名和邮箱，就可以了，因为本地的优先级要大于全局的设定，公司的代码目录则继续使用全局配置，一样的互不影响。</p>
<h3 id="第二种情况"><a href="#第二种情况" class="headerlink" title="第二种情况"></a>第二种情况</h3><blockquote>
<p>GitHub和码云两个账号</p>
</blockquote>
<p>1.不同邮箱<br>如果你同时拥有GitHub和码云两个账号，而又不是使用同一邮箱注册，其实也类似于上面这张情况，分别生成不同邮箱的秘钥，然后再<code>config</code>文件里配置相应的用户、秘钥位置和<code>Host</code>就可以了。<br>2.相同邮箱<br>如果是相同的邮箱，就不需要上面的配置，只要用这个邮箱生成一次秘钥，这个秘钥可以同时用在两个网站上，两个远程仓库都可以提交，因为<code>SSH</code>秘钥是用邮箱生成的，邮箱相同，则秘钥也相同，所以可以共用一个。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="http://www.jianshu.com/p/89cb26e5c3e8" target="_blank" rel="external">http://www.jianshu.com/p/89cb26e5c3e8</a><br><a href="https://gist.github.com/suziewong/4378434" target="_blank" rel="external">https://gist.github.com/suziewong/4378434</a><br><a href="http://noahsnail.com/2016/08/31/2016-9-1-Git%E5%A4%9A%E7%94%A8%E6%88%B7%E9%85%8D%E7%BD%AE/" target="_blank" rel="external">http://noahsnail.com/2016/08/31/2016-9-1-Git%E5%A4%9A%E7%94%A8%E6%88%B7%E9%85%8D%E7%BD%AE/</a><br><a href="https://steflerjiang.github.io/2016/12/16/git%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AE/" target="_blank" rel="external">https://steflerjiang.github.io/2016/12/16/git%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AE/</a></p>
]]></content:encoded>
      
      <comments>http://yoursite.com/2017/08/21/git%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AE/#disqus_thread</comments>
    </item>
    
    <item>
      <title>SonarQube 服务搭建与配置</title>
      <link>http://yoursite.com/2017/08/20/sonar%E6%9C%AC%E5%9C%B0%E9%85%8D%E7%BD%AE/</link>
      <guid>http://yoursite.com/2017/08/20/sonar%E6%9C%AC%E5%9C%B0%E9%85%8D%E7%BD%AE/</guid>
      <pubDate>Sun, 20 Aug 2017 07:07:49 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;SonarQube是神马&quot;&gt;&lt;a href=&quot;#SonarQube是神马&quot; class=&quot;headerlink&quot; title=&quot;SonarQube是神马&quot;&gt;&lt;/a&gt;SonarQube是神马&lt;/h2&gt;&lt;p&gt;   1.&lt;code&gt;SonarQube（又叫Sonar）&lt;
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="SonarQube是神马"><a href="#SonarQube是神马" class="headerlink" title="SonarQube是神马"></a>SonarQube是神马</h2><p>   1.<code>SonarQube（又叫Sonar）</code>是对代码进行静态检测的开源平台,利用这个工具可以发现我们代码里各种隐藏的Bug和潜在的问     题，在团队协作的开发模式中可以更好的控制代码质量。<br>   2.支持多种平台<code>（Windows、Linux）</code>和多种开发语言<code>(java、C#、JavaScript、PHP等)</code>,并可以和<code>Jekins、JIRA</code>等多种外部工具和<code>IntelliJ IDEA</code>等开发工具无缝集成。<br>   3.可视化界面，提供各种维度的质量查询和分析。</p>
<h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a><strong>准备工作</strong></h3><ul>
<li>下载软件<br><code>SonarQube</code> <a href="https://www.sonarqube.org/downloads/" target="_blank" rel="external">https://www.sonarqube.org/downloads/</a><br>规则插件 <code>checkstyle</code>  <a href="https://github.com/checkstyle/sonar-checkstyle" target="_blank" rel="external">https://github.com/checkstyle/sonar-checkstyle</a><br><code>pmd</code> <a href="https://github.com/SonarQubeCommunity/sonar-pmd" target="_blank" rel="external">https://github.com/SonarQubeCommunity/sonar-pmd</a><br><code>findbugs</code> <a href="https://github.com/SonarQubeCommunity/sonar-findbugs" target="_blank" rel="external">https://github.com/SonarQubeCommunity/sonar-findbugs</a><br>汉化插件 <code>sonar-l10n-zh-master</code> <a href="https://github.com/SonarQubeCommunity/sonar-l10n-zh" target="_blank" rel="external">https://github.com/SonarQubeCommunity/sonar-l10n-zh</a><br>本地扫描插件 <code>sonar-runner-dist-2.4</code> <a href="http://repo1.maven.org/maven2/org/codehaus/sonar/runner/sonar-runner-dist/2.4/" target="_blank" rel="external">http://repo1.maven.org/maven2/org/codehaus/sonar/runner/sonar-runner-dist/2.4/</a><br><strong>以上插件均是源码 需要下载后自行编译</strong></li>
<li>所需环境<br><code>JDK1.7</code>或以上<br><code>Maven</code><br><code>Mysql</code></li>
<li><p>配置<br>a.<code>sonarqube\conf</code> 配置<br><code>sonar.properties</code>内容</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sonar.jdbc.username=sonar</div><div class="line">sonar.jdbc.password=sonar</div><div class="line">sonar.jdbc.url=jdbc:mysql://127.0.0.1:3306/sonar?useUnicode=true&amp;characterEncoding=utf8&amp;rewriteBatchedStatements=true&amp;useConfigs=maxPerformance</div></pre></td></tr></table></figure>
<p>b.mysql 配置</p>
<ul>
<li><p>在mysql管理器中执行如下脚本创建数据库及mysql用户  </p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> sonar <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci;  </div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">'sonar'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'sonar'</span>;</div><div class="line"><span class="keyword">GRANT</span> ALL <span class="keyword">ON</span> sonar.* <span class="keyword">TO</span> <span class="string">'sonar'</span>@<span class="string">'%'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'sonar'</span>;</div><div class="line"><span class="keyword">GRANT</span> ALL <span class="keyword">ON</span> sonar.* <span class="keyword">TO</span> <span class="string">'sonar'</span>@<span class="string">'localhost'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'sonar'</span>;</div><div class="line"><span class="keyword">FLUSH</span> <span class="keyword">PRIVILEGES</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>mysql max_allowed_packet</code>配置<br>路径 <code>C:\ProgramData\MySQL\MySQL Server 5.6\my.ini</code><br>设置 <code>max_allowed_packet=101943040</code></p>
</li>
</ul>
</li>
<li>插件编译 安装<br>分别编译下载的插件,去掉<code>snapshort</code>标记,放入插件目录下<code>sonarqube-6.4\extensions\plugins</code></li>
<li>启动<br>至此,启动mysql,启动<code>sonarqube</code>,本地访问 <code>http://localhost:9000/</code><br>可看到管理界面<br>登录名\密码   <code>admin\admin</code></li>
</ul>
<h3 id="扫描配置"><a href="#扫描配置" class="headerlink" title="扫描配置"></a><strong>扫描配置</strong></h3><ul>
<li><p><code>maven</code>扫描 配置<br><code>maven</code>配置文件添加节点</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">profile</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">id</span>&gt;</span>sonar<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">activation</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>true<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">activation</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">properties</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">sonar.jdbc.url</span>&gt;</span></div><div class="line">&lt;![CDATA[jdbc:mysql://127.0.0.1:3306/sonar]]&gt;</div><div class="line">      <span class="tag">&lt;/<span class="name">sonar.jdbc.url</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">sonar.jdbc.driver</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">sonar.jdbc.driver</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">sonar.jdbc.username</span>&gt;</span>sonar<span class="tag">&lt;/<span class="name">sonar.jdbc.username</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">sonar.jdbc.password</span>&gt;</span>sonar<span class="tag">&lt;/<span class="name">sonar.jdbc.password</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">sonar.jdbc.maxWait</span>&gt;</span>50000<span class="tag">&lt;/<span class="name">sonar.jdbc.maxWait</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">sonar.jdbc.minEvictableIdleTimeMillis</span>&gt;</span>600000<span class="tag">&lt;/<span class="name">sonar.jdbc.minEvictableIdleTimeMillis</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">sonar.jdbc.timeBetweenEvictionRunsMillis</span>&gt;</span>30000<span class="tag">&lt;/<span class="name">sonar.jdbc.timeBetweenEvictionRunsMillis</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">sonar.host.url</span>&gt;</span>http://localhost:9000<span class="tag">&lt;/<span class="name">sonar.host.url</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">profile</span>&gt;</span></div></pre></td></tr></table></figure>
<p>执行maven命令<code>mvn sonar:sonar</code> 可扫描项目并上传质量报告</p>
</li>
<li><p><code>sonar-runner</code> 扫描配置<br>a.环境变量配置<br>系统环境变量</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SONAR_RUNNER_HOME  D:\Java\sonar-runner-2.4</div><div class="line">Path 追加 ;%SONAR_RUNNER_HOME%\bin;</div></pre></td></tr></table></figure>
<p>b.sonar-runner.properties配置文件</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">#Configure here general information about the environment, such as SonarQube DB details for example</div><div class="line">#No information about specific project should appear here</div><div class="line">  </div><div class="line">#----- Default SonarQube server</div><div class="line">sonar.host.url=http://localhost:9000</div><div class="line">  </div><div class="line">#----- PostgreSQL</div><div class="line">#sonar.jdbc.url=jdbc:postgresql://localhost/sonar</div><div class="line">  </div><div class="line">#----- MySQL</div><div class="line">sonar.jdbc.url=jdbc:mysql://127.0.0.1:3306/sonar?useUnicode=true&amp;amp;characterEncoding=utf8</div><div class="line">  </div><div class="line">#----- Oracle</div><div class="line">#sonar.jdbc.url=jdbc:oracle:thin:@localhost/XE</div><div class="line">  </div><div class="line">#----- Microsoft SQLServer</div><div class="line">#sonar.jdbc.url=jdbc:jtds:sqlserver://localhost/sonar;SelectMethod=Cursor</div><div class="line">  </div><div class="line">#----- Global database settings</div><div class="line">sonar.jdbc.username=sonar</div><div class="line">sonar.jdbc.password=sonar</div><div class="line">  </div><div class="line">#----- Default source code encoding</div><div class="line">sonar.sourceEncoding=UTF-8</div><div class="line">  </div><div class="line">#----- Security (when 'sonar.forceAuthentication' is set to 'true')</div><div class="line">sonar.login=admin</div><div class="line">sonar.password=admin</div></pre></td></tr></table></figure>
<p>c、本地项目配置文件  项目根目录<br>sonar-project.properties配置文件</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">sonar.projectKey=projectKey </div><div class="line">sonar.projectName=projectName</div><div class="line">sonar.projectVersion=1.0</div><div class="line"># Set modules IDs</div><div class="line">sonar.modules=projectmodules</div><div class="line"></div><div class="line"># Modules inherit properties set at parent level</div><div class="line">sonar.sources=src</div><div class="line">sonar.sourceEncoding=UTF-8</div><div class="line">sonar.language=java</div><div class="line">sonar.java.binaries=target</div><div class="line"># By default, the base directory for a module is <span class="tag">&lt;<span class="name">current_dir</span>&gt;</span>/<span class="tag">&lt;<span class="name">module_ID</span>&gt;</span>.</div></pre></td></tr></table></figure>
<p>至此  使用命令行进入到项目根目录<br>输入命令 <code>sonar-runner</code> 可以完成项目的扫描和上传报告  </p>
</li>
</ul>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://zhuanlan.zhihu.com/p/22926742" target="_blank" rel="external">https://zhuanlan.zhihu.com/p/22926742</a><br><a href="http://blog.csdn.net/xiajian2010/article/details/22983825" target="_blank" rel="external">http://blog.csdn.net/xiajian2010/article/details/22983825</a><br><a href="http://www.cnblogs.com/parryyang/p/6270402.html" target="_blank" rel="external">http://www.cnblogs.com/parryyang/p/6270402.html</a></p>
]]></content:encoded>
      
      <comments>http://yoursite.com/2017/08/20/sonar%E6%9C%AC%E5%9C%B0%E9%85%8D%E7%BD%AE/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Hexo+GitHub Pages博客搭建</title>
      <link>http://yoursite.com/2017/08/17/firstblog/</link>
      <guid>http://yoursite.com/2017/08/17/firstblog/</guid>
      <pubDate>Thu, 17 Aug 2017 06:56:25 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;闲扯一会&quot;&gt;&lt;a href=&quot;#闲扯一会&quot; class=&quot;headerlink&quot; title=&quot;闲扯一会&quot;&gt;&lt;/a&gt;闲扯一会&lt;/h2&gt;&lt;p&gt;由于要学习Java,最近读了不少书和博客,但是读下来发现了一些问题。比如，有些知识点看过很多次，每次看的时候都觉得似曾相识，
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="闲扯一会"><a href="#闲扯一会" class="headerlink" title="闲扯一会"></a>闲扯一会</h2><p>由于要学习Java,最近读了不少书和博客,但是读下来发现了一些问题。比如，有些知识点看过很多次，每次看的时候都觉得似曾相识，却又记不起全貌。有些则是过目就忘，合上书本完全不记得书中所讲精要，甚是苦闷。这几日忽得夫人点拨，说是输出倒逼输出，意思就是充当别人的老师，然后逼自己学习更多的知识。这个道理大家自然都是懂得，只不过有时候做起来比较难以实践。一个是因为人都有惰性，好多事情都是停留在思想和嘴巴，付诸行动的少之又少。再者，也不太容易有机会充当别人的老师，而且本身我自己也不是那种好为人师的性格，倒不是清高装逼，也是怕误人子弟。<br>不过我们这个行业比较特殊，可以有很好的方式去做输出倒逼输入的事情，比如写博客。其实很早就注册了博客园，但是到现在也只是酱油和灌水，没有发过帖子。现在决定写博客，把自己的输入真正变成自己的东西，一方面在写的过程中梳理一下知识，另一方面也记录下自己解决过的问题、踩过的坑。博客前期打算以Step By Step的教程为主，主要为了熟悉markdown语法和Hexo博客的使用，后面会慢慢转向原理解析类和日常踩坑记录类。<br><strong>往者不可谏,来者犹可追。</strong></p>
<hr>
<h2 id="博客搭建"><a href="#博客搭建" class="headerlink" title="博客搭建"></a>博客搭建</h2><h3 id="GitHub-Pages-设置"><a href="#GitHub-Pages-设置" class="headerlink" title="GitHub Pages 设置"></a>GitHub Pages 设置</h3><p>   Github Pages 是 Github 公司提供的免费的静态网站托管服务，用起来方便而且功能强大，不仅没有空间限制，还可以绑定自己的域名。在 <a href="https://pages.github.com/" target="_blank" rel="external">https://pages.github.com/</a> 首页上可以看到很多用 Github Pages 托管的网站，很漂亮。另外很多非常著名的公司和项目也都用这种方式来搭建网站，如微软和 twitter 的网站，还有 谷歌的 Material Design 图标 网站。本博客就是利用Github Pages托管所建。开始创建自己的网站：<br>   创建一个新的仓库  <code>yourname.github.io</code>，<code>yourname</code> 就是你github的用户名，不可以是其他字符，不然访问不到。<br>   只要把静态的网站文件上传到这个仓库，然后访问<code>https://yourname.github.io</code>，就可以看到自己的网站了。</p>
<h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>   Hexo出自台湾大学生tommy351之手，是一个基于Node.js的静态博客程序，其编译上百篇文字只需要几秒。hexo生成的静态网页可以直接放到GitHub Pages，BAE，SAE等平台上。<br>   所需环境<br>   Nodejs<br>   Git</p>
<p>1.首先安装好Nodejs和Git,Hexo安装过程中，有些文件是通过Git下载下来。<br>安装cnpm 由于天朝网路环境问题，所以最好安装cnpm 淘宝的镜像，下载比较快<br><code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code><br>全局安装hexo<br><code>cnpm install hexo-cli -g</code><br>新建一个hexo/blog文件夹<br>进入到你的hexo/blog目录<br>打开git bash<br><code>cnpm install hexo --save</code><br>检查是否安装成功<br><code>hexo -v</code><br>初始化Hexo<br><code>hexo init</code><br>这里会创建一些文件<br>然后输入<br><code>cnpm install</code><br>这里要等一会，安装组件</p>
<p>2.然后就可以使用了<br>常用命令<br><code>hexo new &quot;Hello World&quot;</code> 创建新页面<br><code>hexo generate</code> 重新生成所有页面<br><code>hexo server</code> 启动本地预览  预览地址 <code>http://localhost:4000</code><br> 会看到一个默认主题的hexo网站。</p>
<p> <code>hexo new</code> 命令会创建一个md格式的文件，就是我们写博客的文件，推荐使用markdownpad来写，支持各种markdown格式，<br> 其实在使用过程中无需使用此命令创建，只要在blog下的<code>\source\_posts</code>文件夹下直接新建md格式的文件就可以了。Hexo在生成博客的时候回自动识别这个目录下写所有md文件。</p>
<p>3.发布到GitHub<br> 找到blog目录下的<code>_config.yml</code>文件，加入以下节点<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">type: git</div><div class="line">repo:</div><div class="line">  github: &lt;repository url&gt;,[branch]</div></pre></td></tr></table></figure></p>
<p>执行命令<br>hexo d 就可以完成发布，发布成功后，就可以在<code>https://yourname.github.io</code>看到自己更新的内容了，由于CDN缓存的缘故，有时候更新后要过一会才可以看到最新的内容。</p>
<h3 id="参考地址"><a href="#参考地址" class="headerlink" title="参考地址"></a>参考地址</h3><p>   <a href="https://linghucong.js.org/2016/04/15/2016-04-15-hexo-github-pages-blog/" target="_blank" rel="external">https://linghucong.js.org/2016/04/15/2016-04-15-hexo-github-pages-blog/</a><br>   <a href="http://gitbeijing.com/pages.html" target="_blank" rel="external">http://gitbeijing.com/pages.html</a><br>   <a href="http://www.jianshu.com/p/b8dd1e3e0255" target="_blank" rel="external">http://www.jianshu.com/p/b8dd1e3e0255</a></p>
]]></content:encoded>
      
      <comments>http://yoursite.com/2017/08/17/firstblog/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
